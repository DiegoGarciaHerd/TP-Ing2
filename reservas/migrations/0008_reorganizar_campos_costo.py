# Generated by Django 5.2 on 2025-06-16 20:51

from decimal import Decimal
from django.db import migrations, models


def transferir_precio_total_a_costo_total(apps, schema_editor):
    """
    Transfiere los valores de precio_total a costo_total antes de eliminar precio_total
    """
    Reserva = apps.get_model('reservas', 'Reserva')
    for reserva in Reserva.objects.all():
        if hasattr(reserva, 'precio_total') and reserva.precio_total is not None:
            # Guardar el valor de precio_total en costo_total
            reserva.costo_total = reserva.precio_total
            reserva.save(update_fields=['costo_total'])


def calcular_costo_base_y_adicional(apps, schema_editor):
    """
    Calcula costo_base y monto_adicional basado en los datos existentes
    """
    Reserva = apps.get_model('reservas', 'Reserva')
    for reserva in Reserva.objects.all():
        # Calcular costo_base (precio por día * días)
        if reserva.fecha_recogida and reserva.fecha_devolucion and reserva.vehiculo.precio_por_dia:
            dias = (reserva.fecha_devolucion - reserva.fecha_recogida).days
            if dias > 0:
                costo_base = reserva.vehiculo.precio_por_dia * dias
            else:
                costo_base = reserva.vehiculo.precio_por_dia
            
            # Calcular monto_adicional
            extras_total = Decimal('0.00')
            if reserva.silla_para_ninos:
                extras_total += Decimal('1000.00') * dias
            if reserva.telepass:
                extras_total += Decimal('2000.00') * dias
            if reserva.seguro_por_danos:
                extras_total += costo_base * Decimal('0.30')
            if reserva.conductor_adicional:
                extras_total += costo_base * Decimal('0.20')
            
            # Actualizar los campos
            reserva.costo_base = costo_base
            reserva.monto_adicional = extras_total
            reserva.save(update_fields=['costo_base', 'monto_adicional'])


class Migration(migrations.Migration):

    dependencies = [
        ('reservas', '0007_reserva_conductor_adicional_and_more'),
    ]

    operations = [
        # Paso 1: Transferir datos de precio_total a costo_total
        migrations.RunPython(transferir_precio_total_a_costo_total, reverse_code=migrations.RunPython.noop),
        
        # Paso 2: Agregar nuevos campos
        migrations.AddField(
            model_name='reserva',
            name='costo_base',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo base de la reserva sin adicionales.', max_digits=10),
        ),
        migrations.AddField(
            model_name='reserva',
            name='monto_adicional',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monto total de los adicionales.', max_digits=10),
        ),
        
        # Paso 3: Calcular valores para los nuevos campos
        migrations.RunPython(calcular_costo_base_y_adicional, reverse_code=migrations.RunPython.noop),
        
        # Paso 4: Modificar costo_total para que tenga valores por defecto apropiados
        migrations.AlterField(
            model_name='reserva',
            name='costo_total',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo total de la reserva incluyendo adicionales.', max_digits=10),
        ),
        
        # Paso 5: Eliminar precio_total
        migrations.RemoveField(
            model_name='reserva',
            name='precio_total',
        ),
    ] 